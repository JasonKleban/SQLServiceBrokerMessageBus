//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SSBMB.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SSBMB.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SET NOCOUNT ON
        ///
        ///IF (@@TRANCOUNT &lt;&gt; 0) BEGIN
        ///    RAISERROR (&apos;AMBIENT TRANSACTION NOT ALLOWED&apos;, 11, 1)
        ///    RETURN
        ///END
        ///
        ///DECLARE @LastError INT,
        ///        @Message NVARCHAR(1024),
        ///        @LockStatus INT
        ///
        ///-- AppLock on the string &apos;SSBMB&apos; for the remainder of this connection session
        ///EXEC @LockStatus = sp_getapplock @Resource = &apos;SSBMB&apos;, @LockMode = &apos;SHARED&apos;, @LockTimeout = 0, @LockOwner = &apos;Session&apos;
        ///SELECT @LastError = @@ERROR
        ///
        ///IF (0 &lt; @LastError OR @LockStatus &lt; 0) BEGIN -- SQLSSBFore [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CreateChannel {
            get {
                return ResourceManager.GetString("CreateChannel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SET NOCOUNT ON
        ///
        ///IF (@@TRANCOUNT &lt;&gt; 0) BEGIN
        ///    RAISERROR (&apos;AMBIENT TRANSACTION NOT ALLOWED&apos;, 11, 1)
        ///    RETURN
        ///END
        ///
        ///DECLARE @LastError INT,
        ///        @Message NVARCHAR(1024),
        ///        @LockStatus INT
        ///
        ///-- AppLock on the string &apos;SSBMB&apos; for the remainder of this connection session
        ///EXEC @LockStatus = sp_getapplock @Resource = &apos;SSBMB&apos;, @LockMode = &apos;SHARED&apos;, @LockTimeout = 0, @LockOwner = &apos;Session&apos;
        ///SELECT @LastError = @@ERROR
        ///
        ///IF (0 &lt; @LastError OR @LockStatus &lt; 0) BEGIN -- SQLSSBFore [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CreateTopic {
            get {
                return ResourceManager.GetString("CreateTopic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SET NOCOUNT ON
        ///
        ///IF (@@TRANCOUNT &lt;&gt; 0) BEGIN
        ///    RAISERROR (&apos;AMBIENT TRANSACTION NOT ALLOWED&apos;, 11, 1)
        ///    RETURN
        ///END
        ///
        ///DECLARE @LastError INT,
        ///        @Message NVARCHAR(1024),
        ///        @LockStatus INT
        ///
        ///-- AppLock on the string &apos;SSBMB&apos; for the remainder of this connection session
        ///EXEC @LockStatus = sp_getapplock @Resource = &apos;SSBMB&apos;, @LockMode = &apos;SHARED&apos;, @LockTimeout = 0, @LockOwner = &apos;Session&apos;
        ///SELECT @LastError = @@ERROR
        ///
        ///IF (0 &lt; @LastError OR @LockStatus &lt; 0) BEGIN -- SQLSSBFore [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DestroyChannel {
            get {
                return ResourceManager.GetString("DestroyChannel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SET NOCOUNT ON
        ///
        ///IF (@@TRANCOUNT &lt;&gt; 0) BEGIN
        ///    RAISERROR (&apos;AMBIENT TRANSACTION NOT ALLOWED&apos;, 11, 1)
        ///    RETURN
        ///END
        ///
        ///DECLARE @LastError INT,
        ///        @Message NVARCHAR(1024),
        ///        @LockStatus INT
        ///
        ///-- AppLock on the string &apos;SSBMB&apos; for the remainder of this connection session
        ///EXEC @LockStatus = sp_getapplock @Resource = &apos;SSBMB&apos;, @LockMode = &apos;SHARED&apos;, @LockTimeout = 0, @LockOwner = &apos;Session&apos;
        ///SELECT @LastError = @@ERROR
        ///
        ///IF (0 &lt; @LastError OR @LockStatus &lt; 0) BEGIN -- SQLSSBFore [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DestroyTopic {
            get {
                return ResourceManager.GetString("DestroyTopic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SET NOCOUNT ON
        ///
        ///IF (@@TRANCOUNT &lt;&gt; 0) BEGIN
        ///    RAISERROR (&apos;AMBIENT TRANSACTION NOT ALLOWED&apos;, 11, 1)
        ///    RETURN
        ///END
        ///
        ///DECLARE @LastError INT,
        ///        @Message NVARCHAR(1024),
        ///        @LockStatus INT
        ///
        ///-- AppLock on the string &apos;SSBMB&apos; for the remainder of this connection session
        ///EXEC @LockStatus = sp_getapplock @Resource = &apos;SSBMB&apos;, @LockMode = &apos;EXCLUSIVE&apos;, @LockTimeout = 0, @LockOwner = &apos;Session&apos;
        ///SELECT @LastError = @@ERROR
        ///
        ///IF (0 &lt; @LastError OR @LockStatus &lt; 0) BEGIN -- SQLSSBF [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Install1___Lock {
            get {
                return ResourceManager.GetString("Install1___Lock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE SCHEMA [{0}] AUTHORIZATION [dbo]
        ///
        ///GRANT SELECT ON SCHEMA::[{0}] TO [{1}]
        ///GRANT VIEW DEFINITION ON SCHEMA::[{0}] TO [{1}].
        /// </summary>
        internal static string Install2___Schema {
            get {
                return ResourceManager.GetString("Install2___Schema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///IF (NOT EXISTS (SELECT 1 FROM sys.service_message_types WHERE name = &apos;SerializedMessage&apos;)) BEGIN
        ///    CREATE MESSAGE TYPE [SerializedMessage]
        ///        AUTHORIZATION [dbo]
        ///        VALIDATION = NONE
        ///END
        ///
        ///IF (NOT EXISTS (SELECT 1 FROM sys.service_contracts WHERE name = &apos;ChannelContract&apos;)) BEGIN
        ///    CREATE CONTRACT [ChannelContract]
        ///        AUTHORIZATION [dbo]
        ///    (
        ///        [SerializedMessage] SENT BY ANY
        ///    )
        ///END
        ///
        ///IF (NOT EXISTS (SELECT 1 FROM sys.service_contracts WHERE name = &apos;TopicContract&apos;)) [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Install3___Contracts_and_Tables {
            get {
                return ResourceManager.GetString("Install3___Contracts_and_Tables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ALTER PROCEDURE [{0}].[CleanUpEphemeralSubscriptions] (@TopicName SYSNAME = NULL)
        ///WITH EXECUTE AS OWNER
        ///AS
        ///    SET NOCOUNT ON
        ///
        ///    IF (@@TRANCOUNT &lt;&gt; 0) BEGIN
        ///        RAISERROR (&apos;AMBIENT TRANSACTION NOT ALLOWED&apos;, 11, 1)
        ///        RETURN
        ///    END
        ///
        ///    DECLARE
        ///        @LastError INT,
        ///        @Message NVARCHAR(1024),
        ///        @LockStatus INT
        ///
        ///    -- AppLock on the string &apos;SSBMB&apos; for the remainder of this connection session
        ///    EXEC @LockStatus = sp_getapplock @Resource = &apos;SSBMB&apos;, @L [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Install4___CleanUpEphemeralSubscriptions {
            get {
                return ResourceManager.GetString("Install4___CleanUpEphemeralSubscriptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ALTER PROCEDURE [{0}].[Subscribe] (
        ///    @TopicName SYSNAME, 
        ///    @SubscriptionName SYSNAME
        ///)
        ///WITH EXECUTE AS OWNER
        ///AS
        ///    SET NOCOUNT ON
        ///
        ///    IF (@@TRANCOUNT &lt;&gt; 0) BEGIN
        ///        RAISERROR (&apos;AMBIENT TRANSACTION NOT ALLOWED&apos;, 11, 1)
        ///        RETURN
        ///    END
        ///
        ///    DECLARE
        ///        @Fixed BIT = CASE WHEN @SubscriptionName IS NULL THEN 0 ELSE 1 END,
        ///        @LastError INT,
        ///        @Message NVARCHAR(1024),
        ///        @LockStatus INT
        ///
        ///    SELECT @SubscriptionName = COALESCE(@SubscriptionName, CAST(NEWI [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Install5___Subscribe {
            get {
                return ResourceManager.GetString("Install5___Subscribe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ALTER PROCEDURE [{0}].[Unsubscribe] (
        ///    @TopicName SYSNAME, 
        ///    @SubscriptionName SYSNAME
        ///)
        ///WITH EXECUTE AS OWNER
        ///AS
        ///    SET NOCOUNT ON
        ///
        ///    IF (@@TRANCOUNT &lt;&gt; 0) BEGIN
        ///        RAISERROR (&apos;AMBIENT TRANSACTION NOT ALLOWED&apos;, 11, 1)
        ///        RETURN
        ///    END
        ///
        ///    DECLARE
        ///        @LastError INT,
        ///        @Message NVARCHAR(1024),
        ///        @LockStatus INT
        ///
        ///    -- AppLock on the string &apos;SSBMB&apos; for the remainder of this connection session
        ///    EXEC @LockStatus = sp_getapplock @Resource = &apos;SQ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Install6___Unsubscribe {
            get {
                return ResourceManager.GetString("Install6___Unsubscribe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EXEC sp_releaseapplock @Resource = &apos;SSBMB&apos;, @LockOwner = &apos;Session&apos;.
        /// </summary>
        internal static string Install7___Release {
            get {
                return ResourceManager.GetString("Install7___Release", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SET NOCOUNT ON
        ///
        ///DECLARE @LastError INT,
        ///        @Message NVARCHAR(1024),
        ///        @LockStatus INT,
        ///        @IsInstalled BIT = 1
        ///
        ///-- AppLock on the string &apos;SSBMB&apos; for the remainder of this connection session
        ///EXEC @LockStatus = sp_getapplock @Resource = &apos;SSBMB&apos;, @LockMode = &apos;SHARED&apos;, @LockTimeout = 0, @LockOwner = &apos;Session&apos;
        ///SELECT @LastError = @@ERROR
        ///
        ///IF (0 &lt; @LastError OR @LockStatus &lt; 0) BEGIN -- SSBMB is in use and should not be deleted
        ///    SELECT @Message = &apos;Lock on SQL [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string IsInstalled {
            get {
                return ResourceManager.GetString("IsInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SET NOCOUNT ON
        ///
        ///SELECT ChannelName
        ///FROM [{0}].Channels.
        /// </summary>
        internal static string ListChannels {
            get {
                return ResourceManager.GetString("ListChannels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SET NOCOUNT ON
        ///
        ///SELECT
        ///    TopicName,
        ///    SubscriptionName,
        ///    Fixed
        ///FROM [{0}].Subscriptions.
        /// </summary>
        internal static string ListSubscriptions {
            get {
                return ResourceManager.GetString("ListSubscriptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SET NOCOUNT ON
        ///
        ///SELECT TopicName
        ///FROM [{0}].Topics.
        /// </summary>
        internal static string ListTopics {
            get {
                return ResourceManager.GetString("ListTopics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SET NOCOUNT ON
        ///
        ///DECLARE @LastError INT,
        ///        @Message NVARCHAR(1024),
        ///        @LockStatus INT,
        ///        @MayRepair BIT = 1
        ///
        ///-- AppLock on the string &apos;SSBMB&apos; for the remainder of this connection session
        ///EXEC @LockStatus = sp_getapplock @Resource = &apos;SSBMB&apos;, @LockMode = &apos;SHARED&apos;, @LockTimeout = 0, @LockOwner = &apos;Session&apos;
        ///SELECT @LastError = @@ERROR
        ///
        ///IF (0 &lt; @LastError OR @LockStatus &lt; 0) BEGIN -- SSBMB is in use and should not be deleted
        ///    SELECT @Message = &apos;Lock on SQLSS [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MayRepair {
            get {
                return ResourceManager.GetString("MayRepair", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SET NOCOUNT ON
        ///
        ///DECLARE @LastError INT,
        ///        @Message NVARCHAR(1024),
        ///        @LockStatus INT,
        ///        @MayUninstall BIT = 1
        ///
        ///-- AppLock on the string &apos;SSBMB&apos; for the remainder of this connection session
        ///EXEC @LockStatus = sp_getapplock @Resource = &apos;SSBMB&apos;, @LockMode = &apos;SHARED&apos;, @LockTimeout = 0, @LockOwner = &apos;Session&apos;
        ///SELECT @LastError = @@ERROR
        ///
        ///IF (0 &lt; @LastError OR @LockStatus &lt; 0) BEGIN -- SSBMB is in use and should not be deleted
        ///    SELECT @Message = &apos;Lock on SQ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MayUninstall {
            get {
                return ResourceManager.GetString("MayUninstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SET NOCOUNT ON
        ///
        ///IF (@@TRANCOUNT &lt;&gt; 0) BEGIN
        ///    RAISERROR (&apos;AMBIENT TRANSACTION NOT ALLOWED&apos;, 11, 1)
        ///    RETURN
        ///END
        ///
        ///DECLARE @LastError INT,
        ///        @Message NVARCHAR(1024),
        ///        @LockStatus INT
        ///
        ///-- AppLock on the string &apos;SSBMB&apos; for the remainder of this connection session
        ///EXEC @LockStatus = sp_getapplock @Resource = &apos;SSBMB&apos;, @LockMode = &apos;EXCLUSIVE&apos;, @LockTimeout = 0, @LockOwner = &apos;Session&apos;
        ///SELECT @LastError = @@ERROR
        ///
        ///IF (0 &lt; @LastError OR @LockStatus &lt; 0) BEGIN -- Channel [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Uninstall {
            get {
                return ResourceManager.GetString("Uninstall", resourceCulture);
            }
        }
    }
}
